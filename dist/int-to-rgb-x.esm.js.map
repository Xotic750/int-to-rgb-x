{"version":3,"sources":["../src/int-to-rgb-x.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,cAArB;AACA,OAAO,QAAP,MAAqB,oBAArB;AAEA,IAAM,KAAK,GAAG,EAAd;AACA,IAAM,aAAa,GAAG,CAAtB;AACA,IAAM,WAAW,GAAG,GAApB;AACA,IAAM,cAAc,GAAG,KAAK,CAAC,QAA7B;IACO,W,GAAe,W,CAAf,W;AAEP;;;;;;;;AAOA,eAAe,SAAS,QAAT,CAAkB,CAAlB,EAAqB;AAClC,oBAAW,WAAW,CAAC,IAAZ,CAAiB,QAAQ,CAAC,cAAc,CAAC,IAAf,CAAoB,QAAQ,CAAC,CAAD,CAA5B,EAAiC,EAAjC,CAAD,EAAuC,aAAvC,EAAsD,WAAtD,CAAzB,CAAX;AACD","file":"int-to-rgb-x.esm.js","sourcesContent":["import toUint24 from 'to-uint-24-x';\nimport padStart from 'string-pad-start-x';\n\nconst RADIX = 16;\nconst TARGET_LENGTH = 6;\nconst ZER0_STRING = '0';\nconst numbertoString = RADIX.toString;\nconst {toUpperCase} = ZER0_STRING;\n\n/**\n * Takes a number between 0 and 16777215 inclusive and converts it\n * into 6 digit RGB notation.\n *\n * @param {number} i - Integer to be converted into 6 digit RGB.\n * @returns {string} The RGB hexadecimal notation: \"#RRGGBB\".\n */\nexport default function intToRGB(i) {\n  return `#${toUpperCase.call(padStart(numbertoString.call(toUint24(i), 16), TARGET_LENGTH, ZER0_STRING))}`;\n}\n"]}